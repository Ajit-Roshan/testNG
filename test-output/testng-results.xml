<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-07T20:18:08 IST" name="Listener_Suite" finished-at="2023-06-07T20:18:43 IST" duration-ms="35106">
    <groups>
    </groups>
    <test started-at="2023-06-07T20:18:08 IST" name="Listener_Test" finished-at="2023-06-07T20:18:43 IST" duration-ms="35106">
      <class name="sub.TestClass">
        <test-method is-config="true" signature="setup()[pri:0, instance:sub.TestClass@29e495ff]" started-at="2023-06-07T20:18:08 IST" name="setup" finished-at="2023-06-07T20:18:11 IST" duration-ms="3104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="b()[pri:0, instance:sub.TestClass@29e495ff]" started-at="2023-06-07T20:18:11 IST" name="b" finished-at="2023-06-07T20:18:19 IST" duration-ms="8703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method signature="c()[pri:0, instance:sub.TestClass@29e495ff]" started-at="2023-06-07T20:18:19 IST" name="c" finished-at="2023-06-07T20:18:19 IST" duration-ms="15" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[deleberately skipping]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: deleberately skipping
at sub.TestClass.c(TestClass.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c -->
        <test-method signature="d()[pri:0, instance:sub.TestClass@29e495ff]" started-at="2023-06-07T20:18:20 IST" name="d" finished-at="2023-06-07T20:18:20 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- d -->
        <test-method signature="e()[pri:0, instance:sub.TestClass@29e495ff]" started-at="2023-06-07T20:18:20 IST" name="e" finished-at="2023-06-07T20:18:42 IST" duration-ms="22545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- e -->
        <test-method is-config="true" signature="tear()[pri:0, instance:sub.TestClass@29e495ff]" started-at="2023-06-07T20:18:42 IST" name="tear" finished-at="2023-06-07T20:18:43 IST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- sub.TestClass -->
    </test> <!-- Listener_Test -->
  </suite> <!-- Listener_Suite -->
</testng-results>
